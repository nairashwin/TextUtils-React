{"version":3,"sources":["components/Alert.tsx","components/Navbar.tsx","components/Textform.tsx","App.tsx","index.tsx"],"names":["Alert","type","alert","className","role","charAt","toUpperCase","slice","msg","Navbar","title","aboutText","mode","toggleMode","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","tabIndex","aria-disabled","onClick","htmlFor","Textform","heading","showAlert","useState","text","setText","style","color","placeholder","rows","value","onChange","event","target","backgroundColor","toLowerCase","even","navigator","clipboard","writeText","data-tip","data-for","place","effect","split","filter","Boolean","length","App","setMode","undefined","setAlert","message","setTimeout","document","body","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44fdf1cc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { IAlert } from \"../App\";\r\n\r\ninterface AlertProps {\r\n  alert?: IAlert;\r\n}\r\nconst Alert = ({ alert }: AlertProps) => {\r\n  const capitalizeFirstChar = (type: string) =>\r\n    type.charAt(0).toUpperCase() + type.slice(1);\r\n\r\n  return (\r\n    <>\r\n      {alert && (\r\n        <div\r\n          className={`alert alert-${alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalizeFirstChar(alert.type)}</strong>: {alert.msg}\r\n          {/* <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          /> */}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","interface NavbarProps {\r\n  title?: string;\r\n  aboutText?: string;\r\n  mode: string;\r\n  toggleMode(): void;\r\n}\r\nconst Navbar = ({ title, aboutText, mode, toggleMode }: NavbarProps) => {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${mode} bg-${mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"/navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  {aboutText}\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link disabled\"\r\n                  href=\"/\"\r\n                  tabIndex={-1}\r\n                  aria-disabled=\"true\"\r\n                >\r\n                  Disabled\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckChecked\"\r\n                onClick={toggleMode}\r\n              />\r\n              <label\r\n                className={`form-check-label text-${\r\n                  mode === \"light\" ? \"dark\" : \"light\"\r\n                }`}\r\n                htmlFor=\"flexSwitchCheckChecked\"\r\n              >\r\n                Dark Mode\r\n                {/* {`${mode.charAt(0).toUpperCase() + mode.slice(1)} Mode`} */}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { ChangeEvent, MouseEvent, useState } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\ninterface TextformProps {\r\n  heading: string;\r\n  mode: string;\r\n  showAlert?(message: string, type: string): void;\r\n}\r\nconst Textform = ({ heading, mode, showAlert }: TextformProps) => {\r\n  const rowSize = 5;\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpperClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    setText(text.toUpperCase());\r\n    showAlert!(\"Converted to upper case\", \"success\");\r\n  };\r\n\r\n  const handleLowerClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    setText(text.toLowerCase());\r\n  };\r\n\r\n  const handleOnChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleClear = (even: MouseEvent<HTMLButtonElement>) => {\r\n    setText(\"\");\r\n    showAlert!(\"All Cleared!\", \"success\");\r\n  };\r\n\r\n  const handleCopyToClipBoard = (even: MouseEvent<HTMLButtonElement>) => {\r\n    navigator.clipboard.writeText(text);\r\n    showAlert!(\"Copied to clipboard\", \"success\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ color: mode === \"light\" ? \"black\" : \"white\" }}>\r\n      <div className=\"container my-2 mb-3\">\r\n        <h3>{heading}</h3>\r\n        <textarea\r\n          placeholder={\"Enter your comments\"}\r\n          className=\"form-control\"\r\n          id=\"mybox\"\r\n          rows={rowSize}\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          style={{\r\n            backgroundColor: mode === \"light\" ? \"white\" : \"grey\",\r\n            color: mode === \"light\" ? \"black\" : \"white\",\r\n          }}\r\n        ></textarea>\r\n        <button className=\"btn btn-primary m-2\" onClick={handleUpperClick}>\r\n          Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary m-2\" onClick={handleLowerClick}>\r\n          Lowercase\r\n        </button>\r\n        <button\r\n          onClick={handleCopyToClipBoard}\r\n          className=\"btn btn-primary m-2\"\r\n          data-tip\r\n          data-for=\"registerTip\"\r\n        >\r\n          Copy\r\n        </button>\r\n        <ReactTooltip id=\"registerTip\" place=\"bottom\" effect=\"solid\">\r\n          Copy to Clipboard\r\n        </ReactTooltip>\r\n        <button className=\"btn btn-danger m-2\" onClick={handleClear}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-1\">\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {!text ? 0 : text.split(\" \").filter(Boolean).length} words and{\" \"}\r\n          {text.length} characters\r\n        </p>\r\n        <p>{0.08 * text.length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the textbox above to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Textform;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Alert from \"./components/Alert\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Textform from \"./components/Textform\";\r\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n// import About from \"./components/About\";\r\n\r\nexport interface IAlert {\r\n  msg: string;\r\n  type: string;\r\n}\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState<IAlert | undefined>(undefined);\r\n\r\n  const showAlert = (message: string, type: string) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(undefined);\r\n    }, 1500);\r\n  };\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#042743\";\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      setAlert(undefined);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <Router> */}\r\n      <Navbar\r\n        title=\"Textutils\"\r\n        aboutText=\"About\"\r\n        mode={mode}\r\n        toggleMode={toggleMode}\r\n      />\r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\">\r\n        {/* <Switch> */}\r\n        {/* /users --> Component 1\r\n            /users/home --> Component 2 */}\r\n        {/* <Route exact path=\"/about\">\r\n              <About />\r\n            </Route> */}\r\n        {/* <Route exact path=\"/\"> */}\r\n        <Textform\r\n          heading={\"Enter text to analyze below\"}\r\n          mode={mode}\r\n          showAlert={showAlert}\r\n        />\r\n        {/* </Route>/ */}\r\n        {/* </Switch> */}\r\n      </div>\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}